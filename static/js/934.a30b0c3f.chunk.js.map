{"version":3,"file":"static/js/934.a30b0c3f.chunk.js","mappings":"+SACaA,EAAe,mCAAG,4FACf,2FADe,kBAGJC,EAAAA,EAAAA,IAFX,4FADe,uBAGnBC,EAHmB,EAGnBA,KAHmB,kBAInBA,GAJmB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,qDAUfC,EAAe,mCAAG,WAAOC,GAAP,kFACvBC,EADuB,6CAEWD,EAFX,+DAIJL,EAAAA,EAAAA,IAAUM,GAJN,uBAInBL,EAJmB,EAInBA,KAJmB,kBAKpBA,GALoB,gCAO3BC,QAAQC,IAAR,MAP2B,yDAAH,sDAUfI,EAAe,mCAAG,WAAOC,GAAP,kFACvBF,EADuB,mGAC2EE,GAD3E,kBAGJR,EAAAA,EAAAA,IAAUM,GAHN,uBAGnBL,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,sDASfM,EAAe,mCAAG,WAAOJ,GAAP,kFACvBC,EADuB,6CACqBD,EADrB,uEAGJL,EAAAA,EAAAA,IAAUM,GAHN,uBAGnBL,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,sDASfO,EAAe,mCAAG,WAAML,GAAN,kFACvBC,EADuB,6CACqBD,EADrB,uEAGJL,EAAAA,EAAAA,IAAUM,GAHN,uBAGnBL,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,qD,2ECtC5B,EAAuB,wB,SCIVQ,EAAa,SAAC,GAAgB,IAAdC,EAAa,EAAbA,OACrBC,GAAWC,EAAAA,EAAAA,MACjB,OACE,+BACE,eAAIC,UAAWC,EAAf,SACGJ,EAAOK,KAAI,SAAAC,GAAU,IAAD,EACnB,OACE,yBACE,SAAC,KAAD,CAAMC,GAAE,kBAAaD,EAAME,IAAMC,MAAO,CAAEC,KAAMT,GAAhD,mBACGK,EAAMK,aADT,QACkBL,EAAMM,QAFjBN,EAAME,GAMlB,OAIR,C,kHCoBD,UApCa,WACR,OAA4BK,EAAAA,EAAAA,UAAS,IAArC,eAAOb,EAAP,KAAec,EAAf,KACA,GAAkCD,EAAAA,EAAAA,WAAS,GAA3C,eAAOE,EAAP,KAAkBC,EAAlB,KACA,GAA0BH,EAAAA,EAAAA,UAAS,MAAnC,eAAOI,EAAP,KAAcC,EAAd,KACD,GAAgCL,EAAAA,EAAAA,WAAS,GAAzC,eAAOM,EAAP,KAAiBC,EAAjB,KAsBF,OApBEC,EAAAA,EAAAA,YAAU,WACN,IAAMC,EAAiB,mCAAG,sGAE1BN,GAAa,GACbE,EAAS,MAHiB,UAIP/B,EAAAA,EAAAA,MAJO,OAIpBE,EAJoB,OAKpBW,EAASX,EAAKkC,QACpBT,EAAUd,GANgB,kDAQ1BoB,GAAY,GACZ9B,QAAQ2B,MAAR,MACAC,IAV0B,yBAY1BF,GAAa,GAZa,6EAAH,qDAe3BM,GACD,GAAE,KAID,0BACE,4BACGtB,EAAOwB,OAAS,IAAK,SAAC,IAAD,CAAYxB,OAAQA,IACzCe,EACAI,GAAYM,EAAAA,OAAAA,QAAA,UAAkBR,QAItC,C","sources":["components/Api/api.jsx","webpack://react-homework-template/./src/components/MoviesList/MovieList.module.css?dfe6","components/MoviesList/MoviesList.jsx","pages/home/home.jsx"],"sourcesContent":["import axios from 'axios';\nexport const getTrendsMovies = async() => {\n    const url = \"https://api.themoviedb.org/3/trending/movie/day?api_key=183c3cacc9c38c09c14d38798ccfe9d7\"\n      try {\n    const { data } = await axios.get(url);\n    return  data;\n  } catch (error) {\n    console.log(error);\n    \n  }\n}\nexport const getMovieDetails = async (movieId) => {\n  const url =\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=183c3cacc9c38c09c14d38798ccfe9d7`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getSearchMovies = async (query) => {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=183c3cacc9c38c09c14d38798ccfe9d7&query=${query}`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMovieCredits = async (movieId) => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=183c3cacc9c38c09c14d38798ccfe9d7`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMovieReviews = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=183c3cacc9c38c09c14d38798ccfe9d7`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};","// extracted by mini-css-extract-plugin\nexport default {\"list\":\"MovieList_list__MPHyX\"};","import { useLocation, Link } from \"react-router-dom\";\nimport css from \"./MovieList.module.css\"\nimport PropTypes from 'prop-types';\n\n\nexport const MoviesList = ({ movies }) => {\n  const location = useLocation();\n  return (\n    <>\n      <ul className={css.list}>\n        {movies.map(movie => {\n          return (\n            <li key={movie.id}>\n              <Link to={`/movies/${movie.id}`} state={{ from: location }}>\n                {movie.title ?? movie.name}\n              </Link>\n            </li>\n          );\n        })}\n      </ul>\n    </>\n  );\n};\nMoviesList.propTypes = {\n  movies: PropTypes.arrayOf(\n    PropTypes.shape({\n      id: PropTypes.number.isRequired,\n      title: PropTypes.string,\n      name: PropTypes.string,\n    })\n  ).isRequired,\n};\n","\nimport { getTrendsMovies } from 'components/Api/api';\nimport { MoviesList } from 'components/MoviesList/MoviesList';\nimport React from 'react';\nimport { useEffect, useState } from 'react';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nconst Home = () => {\n     const [movies, setMovies] = useState([]);\n     const [isLoading, setIsLoading] = useState(false);\n     const [error, setError] = useState(null);\n    const [hasError, setHasError] = useState(false);\n\n    useEffect(() =>{\n        const fetchTrendsMovies = async () => {\n      try {\n        setIsLoading(true);\n        setError(null);\n        const data = await getTrendsMovies();\n        const movies = data.results;\n        setMovies(movies);\n      } catch (error) {\n        setHasError(true);\n        console.error(error);\n        setError();\n      } finally {\n        setIsLoading(false);\n      }\n    };\n    fetchTrendsMovies();\n  }, []);\n    \n     \n  return (\n    <div>\n      <main>\n        {movies.length > 0 && <MoviesList movies={movies} />}\n        {isLoading}\n        {hasError && Notify.failure(`${error}`)}\n      </main>\n    </div>\n  );\n};\nexport default Home"],"names":["getTrendsMovies","axios","data","console","log","getMovieDetails","movieId","url","getSearchMovies","query","getMovieCredits","getMovieReviews","MoviesList","movies","location","useLocation","className","css","map","movie","to","id","state","from","title","name","useState","setMovies","isLoading","setIsLoading","error","setError","hasError","setHasError","useEffect","fetchTrendsMovies","results","length","Notify"],"sourceRoot":""}