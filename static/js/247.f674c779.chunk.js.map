{"version":3,"file":"static/js/247.f674c779.chunk.js","mappings":"+SACaA,EAAe,mCAAG,4FACf,2FADe,kBAGJC,EAAAA,EAAAA,IAFX,4FADe,uBAGnBC,EAHmB,EAGnBA,KAHmB,kBAInBA,GAJmB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,qDAUfC,EAAe,mCAAG,WAAOC,GAAP,kFACvBC,EADuB,6CAEWD,EAFX,+DAIJL,EAAAA,EAAAA,IAAUM,GAJN,uBAInBL,EAJmB,EAInBA,KAJmB,kBAKpBA,GALoB,gCAO3BC,QAAQC,IAAR,MAP2B,yDAAH,sDAUfI,EAAe,mCAAG,WAAOC,GAAP,kFACvBF,EADuB,mGAC2EE,GAD3E,kBAGJR,EAAAA,EAAAA,IAAUM,GAHN,uBAGnBL,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,sDASfM,EAAe,mCAAG,WAAOJ,GAAP,kFACvBC,EADuB,6CACqBD,EADrB,uEAGJL,EAAAA,EAAAA,IAAUM,GAHN,uBAGnBL,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,sDASfO,EAAe,mCAAG,WAAML,GAAN,kFACvBC,EADuB,6CACqBD,EADrB,uEAGJL,EAAAA,EAAAA,IAAUM,GAHN,uBAGnBL,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,qD,2HCkB5B,UAnDa,WACT,OAAwBQ,EAAAA,EAAAA,UAAS,IAAjC,eAAOC,EAAP,KAAaC,EAAb,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,IAAU,MAAjBD,GAsBR,OApBEE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAW,mCAAG,sGAEhBN,GAAa,GAFG,UAGGN,EAAAA,EAAAA,IAAgBS,GAHnB,UAGVjB,EAHU,OAKI,QADdW,EAAOX,EAAKW,MACTU,OALO,yCAMPC,EAAAA,OAAAA,QAAe,gCANR,OAQhBV,EAAQD,GARQ,kDAUhBK,GAAS,GACTf,QAAQc,MAAR,MAXgB,yBAahBD,GAAa,GAbG,6EAAH,qDAgBjBM,GACD,GAAE,CAACH,KAGJ,2BACGJ,EACAE,IAAS,uDACTJ,EAAKU,OAAS,GACb,wBACGV,EAAKY,KAAI,SAAAC,GACR,IAAMC,EAAcD,EAAME,aAAN,wCACiBF,EAAME,cACvCC,EACJ,OACE,2BACE,gBAAKC,IAAKH,EAAaI,IAAI,cAC3B,uBAAIL,EAAMM,iBACV,uCAAeN,EAAMO,eAHdP,EAAMP,GAMlB,OAGH,qEAIT,C","sources":["components/Api/api.jsx","components/Cast/Cast.jsx"],"sourcesContent":["import axios from 'axios';\nexport const getTrendsMovies = async() => {\n    const url = \"https://api.themoviedb.org/3/trending/movie/day?api_key=183c3cacc9c38c09c14d38798ccfe9d7\"\n      try {\n    const { data } = await axios.get(url);\n    return  data;\n  } catch (error) {\n    console.log(error);\n    \n  }\n}\nexport const getMovieDetails = async (movieId) => {\n  const url =\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=183c3cacc9c38c09c14d38798ccfe9d7`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getSearchMovies = async (query) => {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=183c3cacc9c38c09c14d38798ccfe9d7&query=${query}`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMovieCredits = async (movieId) => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=183c3cacc9c38c09c14d38798ccfe9d7`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMovieReviews = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=183c3cacc9c38c09c14d38798ccfe9d7`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};","import { useState, useEffect} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { getMovieCredits } from \"components/Api/api\";\nimport defaultImage from '../../image/images.jpg';\n\nconst Cast = () => {\n    const [cast, setCast] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const { id } = useParams(null);\n\n      useEffect(() => {\n        const getCastById = async () => {\n          try {\n            setIsLoading(true);\n            const data = await getMovieCredits(id);\n            const cast = data.cast;\n            if (cast.length === null) {\n              return Notify.failure('Oops! Something went wrong!');\n            }\n            setCast(cast);\n          } catch (error) {\n            setError(true);\n            console.error(error);\n          } finally {\n            setIsLoading(false);\n          }\n        };\n        getCastById();\n      }, [id]);\n   \n    return (\n      <div>\n        {isLoading }\n        {error && <p>Oops! Something went wrong!</p>}\n        {cast.length > 0 ? (\n          <ul>\n            {cast.map(actor => {\n              const actorsPhoto = actor.profile_path\n                ? `https://image.tmdb.org/t/p/w92${actor.profile_path}`\n                : defaultImage;\n              return (\n                <li key={actor.id}>\n                  <img src={actorsPhoto} alt=\"NonPhoto\" />\n                  <p>{actor.original_name}</p>\n                  <p>Character: {actor.character}</p>\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          <p>We don't have any casts for this movie.</p>\n        )}\n      </div>\n    );\n}\nexport default Cast"],"names":["getTrendsMovies","axios","data","console","log","getMovieDetails","movieId","url","getSearchMovies","query","getMovieCredits","getMovieReviews","useState","cast","setCast","isLoading","setIsLoading","error","setError","id","useParams","useEffect","getCastById","length","Notify","map","actor","actorsPhoto","profile_path","defaultImage","src","alt","original_name","character"],"sourceRoot":""}