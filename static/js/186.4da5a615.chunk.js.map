{"version":3,"file":"static/js/186.4da5a615.chunk.js","mappings":"+SACaA,EAAe,mCAAG,4FACf,2FADe,kBAGJC,EAAAA,EAAAA,IAFX,4FADe,uBAGnBC,EAHmB,EAGnBA,KAHmB,kBAInBA,GAJmB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,qDAUfC,EAAe,mCAAG,WAAOC,GAAP,kFACvBC,EADuB,6CAEWD,EAFX,+DAIJL,EAAAA,EAAAA,IAAUM,GAJN,uBAInBL,EAJmB,EAInBA,KAJmB,kBAKpBA,GALoB,gCAO3BC,QAAQC,IAAR,MAP2B,yDAAH,sDAUfI,EAAe,mCAAG,WAAOC,GAAP,kFACvBF,EADuB,mGAC2EE,GAD3E,kBAGJR,EAAAA,EAAAA,IAAUM,GAHN,uBAGnBL,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,sDASfM,EAAe,mCAAG,WAAOJ,GAAP,kFACvBC,EADuB,6CACqBD,EADrB,uEAGJL,EAAAA,EAAAA,IAAUM,GAHN,uBAGnBL,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,sDASfO,EAAe,mCAAG,WAAML,GAAN,kFACvBC,EADuB,6CACqBD,EADrB,uEAGJL,EAAAA,EAAAA,IAAUM,GAHN,uBAGnBL,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,qD,kHCa5B,UA/CgB,WACZ,OAA8BQ,EAAAA,EAAAA,UAAS,IAAvC,eAAOC,EAAP,KAAgBC,EAAhB,KACA,GAAkCF,EAAAA,EAAAA,WAAS,GAA3C,eAAOG,EAAP,KAAkBC,EAAlB,KACA,GAA0BJ,EAAAA,EAAAA,WAAS,GAAnC,eAAOK,EAAP,KAAcC,EAAd,KACQC,GAAOC,EAAAA,EAAAA,IAAU,MAAjBD,GAsBR,OApBCE,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAc,mCAAG,sGAEnBN,GAAa,GAFM,UAGAL,EAAAA,EAAAA,IAAgBQ,GAHhB,UAGbjB,EAHa,OAKI,QADjBW,EAAUX,EAAKqB,SACTC,OALO,yCAMVC,EAAAA,OAAAA,QAAe,gCANL,OAQnBX,EAAWD,GARQ,kDAUnBK,GAAS,GACTf,QAAQc,MAAR,MAXmB,yBAanBD,GAAa,GAbM,6EAAH,qDAgBpBM,GACD,GAAE,CAACH,KAGH,2BACGJ,EACAE,IAAS,uDACTJ,EAAQW,OAAS,GAChB,wBACGX,EAAQa,KAAI,SAAAC,GACX,OACE,2BACE,oCAAYA,EAAOC,WACnB,uBAAID,EAAOE,YAFJF,EAAOR,GAKnB,OAGH,uEAIT,C","sources":["components/Api/api.jsx","components/Reviews/Reviews.jsx"],"sourcesContent":["import axios from 'axios';\nexport const getTrendsMovies = async() => {\n    const url = \"https://api.themoviedb.org/3/trending/movie/day?api_key=183c3cacc9c38c09c14d38798ccfe9d7\"\n      try {\n    const { data } = await axios.get(url);\n    return  data;\n  } catch (error) {\n    console.log(error);\n    \n  }\n}\nexport const getMovieDetails = async (movieId) => {\n  const url =\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=183c3cacc9c38c09c14d38798ccfe9d7`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getSearchMovies = async (query) => {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=183c3cacc9c38c09c14d38798ccfe9d7&query=${query}`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMovieCredits = async (movieId) => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=183c3cacc9c38c09c14d38798ccfe9d7`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMovieReviews = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=183c3cacc9c38c09c14d38798ccfe9d7`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};","import { getMovieReviews } from \"components/Api/api\";\nimport { useState, useEffect} from \"react\";\nimport { useParams } from \"react-router-dom\";\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\n\nconst Reviews = () => {\n    const [reviews, setReviews] = useState([]);\n    const [isLoading, setIsLoading] = useState(false);\n    const [error, setError] = useState(false);\n    const { id } = useParams(null);\n\n     useEffect(() => {\n       const getReviewsById = async () => {\n         try {\n           setIsLoading(true);\n           const data = await getMovieReviews(id);\n           const reviews = data.results;\n           if (reviews.length === null) {\n             return Notify.failure('Oops! Something went wrong!');\n           }\n           setReviews(reviews);\n         } catch (error) {\n           setError(true);\n           console.error(error);\n         } finally {\n           setIsLoading(false);\n         }\n       };\n       getReviewsById();\n     }, [id]);\n    \n    return (\n      <div>\n        {isLoading}\n        {error && <p>Oops! Something went wrong!</p>}\n        {reviews.length > 0 ? (\n          <ul>\n            {reviews.map(review => {\n              return (\n                <li key={review.id}>\n                  <h3>Athor: {review.author}</h3>\n                  <p>{review.content}</p>\n                </li>\n              );\n            })}\n          </ul>\n        ) : (\n          <p>We don't have any reviews for this movie.</p>\n        )}\n      </div>\n    );\n}\nexport default Reviews"],"names":["getTrendsMovies","axios","data","console","log","getMovieDetails","movieId","url","getSearchMovies","query","getMovieCredits","getMovieReviews","useState","reviews","setReviews","isLoading","setIsLoading","error","setError","id","useParams","useEffect","getReviewsById","results","length","Notify","map","review","author","content"],"sourceRoot":""}