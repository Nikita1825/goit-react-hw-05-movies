{"version":3,"file":"static/js/407.3e837c7c.chunk.js","mappings":"+SACaA,EAAe,mCAAG,4FACf,2FADe,kBAGJC,EAAAA,EAAAA,IAFX,4FADe,uBAGnBC,EAHmB,EAGnBA,KAHmB,kBAInBA,GAJmB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,qDAUfC,EAAe,mCAAG,WAAOC,GAAP,kFACvBC,EADuB,6CAEWD,EAFX,+DAIJL,EAAAA,EAAAA,IAAUM,GAJN,uBAInBL,EAJmB,EAInBA,KAJmB,kBAKpBA,GALoB,gCAO3BC,QAAQC,IAAR,MAP2B,yDAAH,sDAUfI,EAAe,mCAAG,WAAOC,GAAP,kFACvBF,EADuB,mGAC2EE,GAD3E,kBAGJR,EAAAA,EAAAA,IAAUM,GAHN,uBAGnBL,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,sDASfM,EAAe,mCAAG,WAAOJ,GAAP,kFACvBC,EADuB,6CACqBD,EADrB,uEAGJL,EAAAA,EAAAA,IAAUM,GAHN,uBAGnBL,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,sDASfO,EAAe,mCAAG,WAAML,GAAN,kFACvBC,EADuB,6CACqBD,EADrB,uEAGJL,EAAAA,EAAAA,IAAUM,GAHN,uBAGnBL,EAHmB,EAGnBA,KAHmB,kBAIpBA,GAJoB,gCAM3BC,QAAQC,IAAR,MAN2B,yDAAH,qD,uJCtC5B,EAAuB,sBAAvB,EAAsD,wB,kBC0EtD,EApEqB,WAAO,IAAD,MACzB,GAAkCQ,EAAAA,EAAAA,WAAS,GAA3C,eAAOC,EAAP,KAAkBC,EAAlB,KACA,GAA0BF,EAAAA,EAAAA,WAAS,GAAnC,eAAOG,EAAP,KAAcC,EAAd,KACA,GAAwCJ,EAAAA,EAAAA,UAAS,MAAjD,eAAOK,EAAP,KAAqBC,EAArB,KACQC,GAAOC,EAAAA,EAAAA,MAAPD,GACFE,GAAWC,EAAAA,EAAAA,MACTC,GAAeC,EAAAA,EAAAA,QAAM,oBAACH,EAASI,aAAV,aAAC,EAAgBC,YAAjB,QAAyB,MAGnDC,EAAAA,EAAAA,YAAU,WACR,IAAMC,EAAY,mCAAG,oGAEjBd,GAAa,GAFI,UAGET,EAAAA,EAAAA,IAAgBc,GAHlB,UAIJ,QADPjB,EAHW,iDAKR2B,EAAAA,OAAAA,QAAe,gCALP,OAOjBX,EAAgBhB,GAPC,kDASjBc,GAAS,GACTb,QAAQY,MAAR,MAViB,yBAYjBD,GAAa,GAZI,6EAAH,qDAelBc,GACD,GAAE,CAACT,IAEL,IAAMW,EAAwB,OAAZb,QAAY,IAAZA,GAAAA,EAAcc,YAAd,yCACoBd,EAAac,aAC/CC,EAEAC,EAAYhB,EAA2C,GAA5BA,EAAaiB,aAAoB,KAEhE,OACE,4BACGrB,EACAE,IAAS,wDACV,SAAC,KAAD,CAAMoB,UAAWC,EAAYC,GAAId,EAAae,QAA9C,UACE,mBAAQH,UAAWC,EAAnB,8BAEDnB,IACC,4BACE,4BACE,gBAAKsB,IAAKT,EAAWU,IAAI,WACzB,wBAAKvB,EAAawB,kBAClB,wCAAgBR,EAAhB,QACA,sCACA,iCAAIhB,EAAayB,gBAAjB,QAA6B,wBAC7B,oCACA,uBAAIzB,EAAa0B,OAAOC,KAAI,SAAAC,GAAK,OAAIA,EAAMC,IAAV,IAAgBC,KAAK,WAExD,0BACE,2BACE,yBACE,SAAC,KAAD,CAAMV,GAAI,OAAV,qBAEF,yBACE,SAAC,KAAD,CAAMA,GAAI,UAAV,gCAMV,SAAC,KAAD,MAGP,C","sources":["components/Api/api.jsx","webpack://react-homework-template/./src/pages/MovieDetails/details.module.css?ae63","pages/MovieDetails/MovieDetails.jsx"],"sourcesContent":["import axios from 'axios';\nexport const getTrendsMovies = async() => {\n    const url = \"https://api.themoviedb.org/3/trending/movie/day?api_key=183c3cacc9c38c09c14d38798ccfe9d7\"\n      try {\n    const { data } = await axios.get(url);\n    return  data;\n  } catch (error) {\n    console.log(error);\n    \n  }\n}\nexport const getMovieDetails = async (movieId) => {\n  const url =\n    `https://api.themoviedb.org/3/movie/${movieId}?api_key=183c3cacc9c38c09c14d38798ccfe9d7`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getSearchMovies = async (query) => {\n  const url = `https://api.themoviedb.org/3/search/movie?api_key=183c3cacc9c38c09c14d38798ccfe9d7&query=${query}`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMovieCredits = async (movieId) => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/credits?api_key=183c3cacc9c38c09c14d38798ccfe9d7`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};\nexport const getMovieReviews = async movieId => {\n  const url = `https://api.themoviedb.org/3/movie/${movieId}/reviews?api_key=183c3cacc9c38c09c14d38798ccfe9d7`;\n  try {\n    const { data } = await axios.get(url);\n    return data;\n  } catch (error) {\n    console.log(error);\n  }\n};","// extracted by mini-css-extract-plugin\nexport default {\"back\":\"details_back__ZMo+U\",\"goBack\":\"details_goBack__EhFcf\"};","import { useEffect, useState, useRef } from 'react';\nimport { Link, useLocation, useParams,Outlet  } from 'react-router-dom';\nimport { Notify } from 'notiflix/build/notiflix-notify-aio';\nimport { getMovieDetails } from 'components/Api/api';\nimport css from \"./details.module.css\"\nimport defaultImage from \"../../image/images.jpg\"\n\nconst MovieDetails = () => {\n  const [isLoading, setIsLoading] = useState(false);\n  const [error, setError] = useState(false);\n  const [instantMovie, setInstantMovie] = useState(null);\n  const { id } = useParams();\n  const location = useLocation();\n    const backLinkHref = useRef(location.state?.from ?? '/');\n\n\n     useEffect(() => {\n       const getMovieById = async () => {\n         try {\n           setIsLoading(true);\n           const data = await getMovieDetails(id);\n           if (data === null) {\n             return Notify.failure('Oops! Something went wrong!');\n           }\n           setInstantMovie(data);\n         } catch (error) {\n           setError(true);\n           console.error(error);\n         } finally {\n           setIsLoading(false);\n         }\n       };\n       getMovieById();\n     }, [id]);\n    \n    const posterUrl = instantMovie?.poster_path\n      ? `https://image.tmdb.org/t/p/w200${instantMovie.poster_path}`\n      : defaultImage;\n    \n  const userScore = instantMovie ? instantMovie.vote_average * 10 : null;\n\n    return (\n      <main>\n        {isLoading}\n        {error && <p>Oops! Something went wrong!</p>}\n        <Link className={css.goBack} to={backLinkHref.current}>\n          <button className={css.back}>‚Üê Go back</button>\n        </Link>\n        {instantMovie && (\n          <div>\n            <div>\n              <img src={posterUrl} alt=\"error\" />\n              <h2>{instantMovie.original_title}</h2>\n              <p>User Score: {userScore}%</p>\n              <h2>Overview</h2>\n              <p>{instantMovie.overview ?? 'There is no review'}</p>\n              <h2>Genres</h2>\n              <p>{instantMovie.genres.map(genre => genre.name).join(' ')}</p>\n            </div>\n            <div>\n              <ul>\n                <li>\n                  <Link to={'cast'}>cast</Link>\n                </li>\n                <li>\n                  <Link to={'reviews'}>reviews</Link>\n                </li>\n              </ul>\n            </div>\n          </div>\n        )}\n        <Outlet />\n      </main>\n    ); \n};\nexport default MovieDetails\n"],"names":["getTrendsMovies","axios","data","console","log","getMovieDetails","movieId","url","getSearchMovies","query","getMovieCredits","getMovieReviews","useState","isLoading","setIsLoading","error","setError","instantMovie","setInstantMovie","id","useParams","location","useLocation","backLinkHref","useRef","state","from","useEffect","getMovieById","Notify","posterUrl","poster_path","defaultImage","userScore","vote_average","className","css","to","current","src","alt","original_title","overview","genres","map","genre","name","join"],"sourceRoot":""}